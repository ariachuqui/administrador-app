{"version":3,"sources":["components/CrearCita.js","components/MostrarCita.js","App.js","index.js"],"names":["CrearCita","setCitas","initialState","nombre","dueño","fecha","hora","sintomas","id","useState","validacion","setValidacion","cita","setCita","propiedades","handleInputChange","target","name","value","className","onSubmit","e","preventDefault","val","some","p","length","console","log","c","Date","getTime","type","placeholder","onChange","MostrarCita","citas","map","key","onClick","filter","eliminar","App","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"qOAEaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClBC,EAAe,CACjBC,OAAQ,GACRC,WAAO,GACPC,MAAO,GACPC,KAAM,GACNC,SAAU,GACVC,GAAI,IAP+B,EAUHC,oBAAS,GAVN,mBAUhCC,EAVgC,KAUpBC,EAVoB,OAYfF,mBAASP,GAZM,mBAYhCU,EAZgC,KAY1BC,EAZ0B,KAc/BV,EAAyCS,EAAzCT,OAAQC,EAAiCQ,EAAjCR,WAAOC,EAA0BO,EAA1BP,MAAOC,EAAmBM,EAAnBN,KAAMC,EAAaK,EAAbL,SAE9BO,EAAc,CAACX,EAAQC,EAAOC,EAAOC,EAAMC,GAG3CQ,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBH,EAAQ,2BACDD,GADA,kBAEFI,EAAOC,KAAOD,EAAOE,UAmB9B,OACI,yBAAKC,UAAU,cACX,0CAECT,GACG,yBAAKS,UAAU,WACd,iEAIL,0BAAMC,SAzBO,SAAAC,GACjBA,EAAEC,iBAEF,IAAMC,EAAMT,EAAYU,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAU,KAC9CC,QAAQC,IAAIL,IAEA,IAARA,EACAZ,GAAc,IAEdA,GAAc,GACdV,GAAS,SAAA4B,GAAC,4BAAQA,GAAR,4BAAgBjB,GAAhB,IAAsBJ,IAAI,IAAIsB,MAAOC,iBAC/ClB,EAAQX,MAeJ,6CACA,2BACI8B,KAAK,OACLC,YAAY,QACZhB,KAAK,SACLC,MAAOf,EACP+B,SAAUnB,IAGd,8CACA,2BACIiB,KAAK,OACLC,YAAY,SACZhB,KAAK,WACLC,MAAOd,EACP8B,SAAUnB,IAGd,oCACA,2BACIiB,KAAK,OACLf,KAAK,QACLC,MAAOb,EACP6B,SAAUnB,IAGd,mCACA,2BACIiB,KAAK,OACLf,KAAK,OACLC,MAAOZ,EACP4B,SAAUnB,IAGd,0CACA,2BACIiB,KAAK,OACLC,YAAY,qBACZhB,KAAK,WACLC,MAAOX,EACP2B,SAAUnB,IAGd,4BAAQiB,KAAK,UAAb,qBC/FHG,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOnC,EAAe,EAAfA,SAQjC,OACI,yBAAKkB,UAAU,gBACX,qCAEkB,IAAjBiB,EAAMV,OACH,2CAEAU,EAAMC,KAAI,gBAAGlC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAOC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,SAAUC,EAAzC,EAAyCA,GAAzC,OACN,yBAAKW,UAAU,OAAOmB,IAAK9B,GACvB,2BACI,2CACCL,GAEL,2BACI,4CACCC,GAEL,2BACI,yCACCC,GAEL,2BACI,wCACCC,GAEL,2BACI,4CACCC,GAEL,4BAAQgC,QAAU,kBAjCrB,SAAC/B,GACdP,EAASmC,EAAMI,QAAO,SAAAX,GAAC,OAAIA,EAAErB,KAAOA,MAgCIiC,CAASjC,KAAjC,kBCXTkC,EAxBH,WAER,IAAMxC,EAAgByC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAFrD,EAIYrC,mBAASP,GAJrB,mBAIPkC,EAJO,KAIAnC,EAJA,KAad,OAPA8C,qBAAU,WACNF,aAAaG,QAAQ,QAASL,KAAKM,UAAUb,MAC7C,CAACA,IAMD,oCACI,0DACA,yBAAKjB,UAAU,kBACX,kBAAC,EAAD,CAAWlB,SAAUA,IACrB,kBAAC,EAAD,CAAamC,MAAOA,EAAOnC,SAAUA,O,MChBrDiD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d6d3c438.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const CrearCita = ({ setCitas }) => {\n    const initialState = {\n        nombre: \"\",\n        dueño: \"\",\n        fecha: \"\",\n        hora: \"\",\n        sintomas: \"\",\n        id: \"\",\n    };\n\n    const [validacion, setValidacion] = useState(false);\n\n    const [cita, setCita] = useState(initialState);\n\n    const { nombre, dueño, fecha, hora, sintomas } = cita;\n\n    const propiedades = [nombre, dueño, fecha, hora, sintomas];\n\n\n    const handleInputChange = ({ target }) => {\n        setCita({\n            ...cita,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const val = propiedades.some(p => p.length <= 1);\n        console.log(val)\n\n        if (val === true) {\n            setValidacion(true);\n        } else {\n            setValidacion(false);\n            setCitas(c => [...c, { ...cita, id: new Date().getTime() }]);\n            setCita(initialState);\n        }\n    };\n\n    return (\n        <div className=\"crear-cita\">\n            <h2>crear cita</h2>\n\n            {validacion && (\n                <div className='warning'> \n                 <p>todos los campos son obligatorios</p>\n                </div>\n            )}\n\n            <form onSubmit={handleSubmit}>\n                <p>nombre mascota</p>\n                <input\n                    type=\"text\"\n                    placeholder=\"Argos\"\n                    name=\"nombre\"\n                    value={nombre}\n                    onChange={handleInputChange}\n                />\n\n                <p>nombre dueño</p>\n                <input\n                    type=\"text\"\n                    placeholder=\"Manuel\"\n                    name=\"dueño\"\n                    value={dueño}\n                    onChange={handleInputChange}\n                />\n\n                <p>fecha</p>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    value={fecha}\n                    onChange={handleInputChange}\n                />\n\n                <p>hora</p>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    value={hora}\n                    onChange={handleInputChange}\n                />\n\n                <p>síntomas</p>\n                <input\n                    type=\"text\"\n                    placeholder=\"diarrea, vomito...\"\n                    name=\"sintomas\"\n                    value={sintomas}\n                    onChange={handleInputChange}\n                />\n\n                <button type=\"submit\"> agregar cita </button>\n            </form>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const MostrarCita = ({ citas, setCitas }) => {\n\n   \n\n    const eliminar = (id) => {\n        setCitas(citas.filter(c => c.id !== id))\n    }\n\n    return (\n        <div className=\"mostrar-cita\">\n            <h2>citas</h2>\n\n            {citas.length === 0 ? (\n                <p>no hay citas</p>\n            ) : (\n                citas.map(({ nombre, dueño, fecha, hora, sintomas, id }) => (\n                    <div className=\"cita\" key={id}>\n                        <p>\n                            <span>mascota: </span>\n                            {nombre}\n                        </p>\n                        <p>\n                            <span>dueño: </span>\n                            {dueño}\n                        </p>\n                        <p>\n                            <span>fecha: </span>\n                            {fecha}\n                        </p>\n                        <p>\n                            <span>hora: </span>\n                            {hora}\n                        </p>\n                        <p>\n                            <span>sintomas: </span>\n                            {sintomas}\n                        </p>\n                        <button onClick={ () => eliminar(id) }>eliminar</button>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n","import React, { useState, useEffect } from 'react'\nimport { CrearCita } from './components/CrearCita'\nimport { MostrarCita } from './components/MostrarCita'\n\nconst App = () => {\n\n    const initialState =  JSON.parse(localStorage.getItem('citas')) || [];\n\n    const [citas, setCitas] = useState(initialState)\n\n    useEffect(() => {\n        localStorage.setItem('citas', JSON.stringify(citas))\n     }, [citas])\n\n\n\n\n    return (\n        <>\n            <h1>administrador de pacientes</h1>\n            <div className=\"administracion\">\n                <CrearCita setCitas={setCitas} />\n                <MostrarCita citas={citas} setCitas={setCitas}/>\n            </div>\n        </>\n    )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}